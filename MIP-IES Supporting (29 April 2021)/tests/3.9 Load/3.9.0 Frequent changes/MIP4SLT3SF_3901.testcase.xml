<?xml version="1.0"?>
<TestCase xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://mip-interop.org/schemas/SEPT/2016/09/29/TestAutomation.xsd">
  <TestCaseId>
    <TestCaseIdBlock>MIP4</TestCaseIdBlock>
    <TestCaseIdLevel>SLT3SF</TestCaseIdLevel>
    <TestCaseIdGroup>39</TestCaseIdGroup>
    <TestCaseIdNumber>1</TestCaseIdNumber>
  </TestCaseId>
  <TestCaseTitle>The Type of the object changes.</TestCaseTitle>
  <TestCaseExecutionPriority>1</TestCaseExecutionPriority>
  <TestCaseObjective>The objective of this test is to assess the ability of consumers and producers to handle large payloads and frequent transactions.</TestCaseObjective>
  <TestCaseScenario>A Consumer receives MIP4 BSOs with frequent Type changes from the Producer (for instance BSO with AirfieldType changes to AnchorageType)</TestCaseScenario>
  <TestCaseEnvironment>Internet or Co-located. Exchange Pattern: P/S.</TestCaseEnvironment>
  <TestCaseMaximumParticipation>2</TestCaseMaximumParticipation>
  <TestCasePreCondition>Test group 3.6 'Initialisation'. </TestCasePreCondition>
  <TestCaseInput>Validated means to acquire information from the Producer using a MIP4 exchange pattern.</TestCaseInput>
  <TestCaseConclusion>The producer and consumer can process MIP4 BSOs changing frequently their Type.</TestCaseConclusion>
  <TestCaseOutput>The Consumer successfully acquires content from the Producer and is able to apply it to their system without error.</TestCaseOutput>
  <TestCaseTraceability>REQ_SYS_0017.</TestCaseTraceability>
  <TestCaseStep>
    <TestCaseStepNumber>1</TestCaseStepNumber>
    <TestCaseStepAction>Obtain a MIP4 BSO (for instance with AirfieldType) from the producer.</TestCaseStepAction>
    <TestCaseStepResult>Content will be received from the Producer. </TestCaseStepResult>
    <TestCaseStepDestination>2</TestCaseStepDestination>
    <TestCaseStepSource>1</TestCaseStepSource>
  </TestCaseStep>
  <TestCaseStep>
    <TestCaseStepNumber>2</TestCaseStepNumber>
    <TestCaseStepAction>Process the MIP4 content on the Consumer. </TestCaseStepAction>
    <TestCaseStepResult>The Consumer will successfully process the MIP4 content without error. </TestCaseStepResult>
    <TestCaseStepDestination>2</TestCaseStepDestination>
    <TestCaseStepSource>1</TestCaseStepSource>
  </TestCaseStep>
  <TestCaseStep>
    <TestCaseStepNumber>3</TestCaseStepNumber>
    <TestCaseStepAction>Within a considered short time lapse, change BSO type (to AnchorageType for instance), at the producer. Rest of BSO's attributes and elements will stay unchanged as far as possible. Obtain it on the consumer. </TestCaseStepAction>
    <TestCaseStepResult>Content will be received from the Producer. </TestCaseStepResult>
    <TestCaseStepDestination>2</TestCaseStepDestination>
    <TestCaseStepSource>1</TestCaseStepSource>
  </TestCaseStep>
  <TestCaseStep>
    <TestCaseStepNumber>4</TestCaseStepNumber>
    <TestCaseStepAction>Process the MIP4 content on the Consumer. </TestCaseStepAction>
    <TestCaseStepResult>The Consumer will successfully process the MIP4 content without error. </TestCaseStepResult>
    <TestCaseStepDestination>2</TestCaseStepDestination>
    <TestCaseStepSource>1</TestCaseStepSource>
  </TestCaseStep>
  <TestCaseStep>
    <TestCaseStepNumber>5</TestCaseStepNumber>
    <TestCaseStepAction>Repeat actions on steps 3 and 4 several times, changing to other types (ApronType, BankType, BarracksType...) if possible. </TestCaseStepAction>
    <TestCaseStepResult>The Consumer will successfully process the MIP4 content without error, handling frequent transactions.</TestCaseStepResult>
    <TestCaseStepDestination>2</TestCaseStepDestination>
    <TestCaseStepSource>1</TestCaseStepSource>
  </TestCaseStep>
  <TestCaseEventGeneration>true</TestCaseEventGeneration>
</TestCase>